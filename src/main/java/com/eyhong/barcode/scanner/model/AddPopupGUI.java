package com.eyhong.barcode.scanner.model;

import com.eyhong.barcode.scanner.entity.Item;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

@Component
public class AddPopupGUI {
    private JLabel YESButton;
    private JLabel NOButton;
    private JPanel panel1;
    private JLabel panelTitle;
    private JPanel buttonPanel;
    private ItemRegistration itemReg;

    @Autowired
    public AddPopupGUI(ItemRegistration itemReg) {
        this.itemReg = itemReg;
    }

    private boolean onButton(MouseEvent e, JLabel button) {
        return e.getPoint().getX() >= 0 && e.getPoint().getY() >= 0 &&
                e.getPoint().getX() <= button.getWidth() && e.getPoint().getY() <= button.getHeight();
    }

    public void displayUI(Item item) {
        JFrame frame = new JFrame();
        //INVENTORY BUTTON
        YESButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                YESButton.setIcon(new ImageIcon(getClass().getResource("/buttons/yesButton.png")));
            }
        });
        YESButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseExited(MouseEvent e) {
                YESButton.setIcon(new ImageIcon(getClass().getResource("/buttons/yesButtonRed.png")));
            }
        });
        YESButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                if (onButton(e, YESButton)) {
                    itemReg.itemRegistration(item);
                    frame.dispose();
                }
            }
        });

        // EXIT BUTTON
        NOButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                NOButton.setIcon(new ImageIcon(getClass().getResource("/buttons/noButton.png")));
            }
        });
        NOButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseExited(MouseEvent e) {
                NOButton.setIcon(new ImageIcon(getClass().getResource("/buttons/noButtonRed.png")));
            }
        });
        NOButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                if (onButton(e, NOButton))
                    frame.dispose();
            }
        });
        frame.setTitle("Add Item?");
        frame.setContentPane(panel1);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setLocationRelativeTo(null);
        frame.pack();
        frame.setResizable(false);
        frame.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        panelTitle = new JLabel();
        Font panelTitleFont = this.$$$getFont$$$(null, -1, 28, panelTitle.getFont());
        if (panelTitleFont != null) panelTitle.setFont(panelTitleFont);
        panelTitle.setHorizontalAlignment(0);
        panelTitle.setText("Add new item?");
        panel1.add(panelTitle, BorderLayout.NORTH);
        buttonPanel = new JPanel();
        buttonPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel1.add(buttonPanel, BorderLayout.SOUTH);
        YESButton = new JLabel();
        YESButton.setHorizontalAlignment(10);
        YESButton.setIcon(new ImageIcon(getClass().getResource("/buttons/yesButtonRed.png")));
        YESButton.setText("");
        buttonPanel.add(YESButton);
        NOButton = new JLabel();
        NOButton.setHorizontalAlignment(10);
        NOButton.setIcon(new ImageIcon(getClass().getResource("/buttons/noButtonRed.png")));
        NOButton.setText("");
        buttonPanel.add(NOButton);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
